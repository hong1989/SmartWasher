<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:jee="http://www.springframework.org/schema/jee" xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:context="http://www.springframework.org/schema/context"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
	http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-3.0.xsd
	http://www.springframework.org/schema/jee http://www.springframework.org/schema/jee/spring-jee-3.0.xsd
	http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.0.xsd"
	default-lazy-init="true">
	<bean id="propertyConfigurer" class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
		<property name="locations">
			<list>
				<value>/WEB-INF/config/jdbc.properties</value>
				<value>/WEB-INF/config/redis.properties</value>
			</list>
		</property>
	</bean>
	<!-- mysql数据库连接配置 -->
	<bean id="dataSource" class="com.mchange.v2.c3p0.ComboPooledDataSource">
		<property name="driverClass" value="${jdbc.driverClassName}" />
		<property name="jdbcUrl" value="${jdbc.url}" />
		<property name="user" value="${jdbc.username}" />
		<property name="password" value="${jdbc.password}" />
		<property name="autoCommitOnClose" value="true"/>
		<property name="checkoutTimeout" value="${cpool.checkoutTimeout}"/>
		<property name="initialPoolSize" value="${cpool.minPoolSize}"/>
		<property name="minPoolSize" value="${cpool.minPoolSize}"/>
		<property name="maxPoolSize" value="${cpool.maxPoolSize}"/>
		<property name="maxIdleTime" value="${cpool.maxIdleTime}"/>
		<property name="acquireIncrement" value="${cpool.acquireIncrement}"/>
		<property name="maxIdleTimeExcessConnections" value="${cpool.maxIdleTimeExcessConnections}"/>
	</bean>
	<!-- hibernate session工厂配置 -->
	 <bean id="sessionFactory" class="org.springframework.orm.hibernate4.LocalSessionFactoryBean">
	 	<property name="dataSource" ref="dataSource"/>	
			<property name="mappingLocations">
				<list>
					<value>classpath*:/com/sunrun/liehu/database/entity/hbm/*.hbm.xml</value>
				</list>
			</property>
	 	<property name="hibernateProperties">
			<props>
				 <prop key="hibernate.dialect">org.hibernate.dialect.MySQLInnoDBDialect</prop>  
				 <prop key="hibernate.show_sql">false</prop>
				 <prop key="hibernate.format_sql">false</prop>
				 <prop key="hibernate.query.substitutions">true 1, false 0</prop>  
				 <prop key="hibernate.jdbc.batch_size">2000</prop>
				 <prop key="hibernate.cache.use_query_cache">false</prop>
				 <!-- 事务批量插入，需关闭二级缓存 -->
				 <prop key="hiberante.cache.use_second_level_cache">false</prop>
			</props>
		</property>

	 </bean>
	 
	 <!-- Hibernate数据库事务管理器 -->
	<bean id="hibernateTxManager"
		class="org.springframework.orm.hibernate4.HibernateTransactionManager">
		<property name="sessionFactory" ref="sessionFactory"></property>
	</bean>
    
	<tx:annotation-driven transaction-manager="hibernateTxManager" />
	
	<!-- spring jdbcTemplate配置-->
	<bean id="jdbcTemplate" class="org.springframework.jdbc.core.JdbcTemplate">  
        <property name="dataSource" ref="dataSource"></property>  
	</bean>  

	<!-- JDBCTemplate事务 -->
	<bean id="jdbcTemplateTxManager"  class="org.springframework.jdbc.datasource.DataSourceTransactionManager">  
       <property name="dataSource" ref="dataSource" />  
    </bean>  
 
	<tx:annotation-driven transaction-manager="jdbcTemplateTxManager" />  
	 

	<!-- 异步线程池,将redis中数据插入到后台数据库，同步redis查询缓存 -->
	<bean id="taskExecutor"
		class="org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor">
		<!-- 核心线程数 -->
		<property name="corePoolSize" value="4" />
		<!-- 最大线程数 -->
		<property name="maxPoolSize" value="8" />
		<!-- 队列最大长度 >=mainExecutor.maxSize -->
		<property name="queueCapacity" value="4" />
		<!-- 线程池维护线程所允许的空闲时间 -->
		<property name="keepAliveSeconds" value="300" />
		<!-- 线程池对拒绝任务(无线程可用)的处理策略 -->
		<!-- AbortPolicy:直接抛出java.util.concurrent.RejectedExecutionException异常 -->
		<!-- CallerRunsPolicy:主线程直接执行该任务，执行完之后尝试添加下一个任务到线程池中，可以有效降低向线程池内添加任务的速度 -->
		<!-- DiscardOldestPolicy:抛弃旧的任务、暂不支持；会导致被丢弃的任务无法再次被执行 -->
		<!-- DiscardPolicy:抛弃当前任务、暂不支持；会导致被丢弃的任务无法再次被执行 -->
		<property name="rejectedExecutionHandler">
			<bean class="java.util.concurrent.ThreadPoolExecutor$AbortPolicy" />
		</property>
	</bean>
	
    <!--  dao层和service层使用了spring事务注解配置，需放到ContextLoaderListener（对应applicationContext.xml）产生的父容器下，不能放在
    	 DispatcherServlet配置文件下，否则service层事务回滚以及批量操作会失效 -->
    <context:component-scan base-package="com.sunrun.smartwasher.database.dao.impl" />
    
    <context:component-scan base-package="com.sunrun.smartwasher.database.manager.impl" />
    
    <context:component-scan base-package="com.sunrun.smartwasher.redis.dao.impl" />
    
    <context:component-scan base-package="com.sunrun.smartwasher.redis.manager.impl" />
    
    <context:component-scan base-package="com.sunrun.smartwasher.handler" />
    
    <!-- 配置redis -->
    <import resource="redis-config.xml" />
   
</beans>